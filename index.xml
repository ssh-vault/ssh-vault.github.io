<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ssh-vault</title>
    <link>https://ssh-vault.com/</link>
    <description>Recent content on ssh-vault</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Oct 2016 21:26:25 +0200</lastBuildDate>
    <atom:link href="https://ssh-vault.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>ðŸŒ°  ssh-vault</title>
      <link>https://ssh-vault.com/about/</link>
      <pubDate>Fri, 07 Oct 2016 21:26:25 +0200</pubDate>
      
      <guid>https://ssh-vault.com/about/</guid>
      <description>

&lt;h1 id=&#34;what-is-ssh-vault&#34;&gt;What is ssh-vault?&lt;/h1&gt;

&lt;p&gt;A command line tool (cli) for creating encrypted files &amp;ldquo;vaults&amp;rdquo; using ssh
&lt;a href=&#34;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&#34;&gt;rsa&lt;/a&gt; keys for encrypt/decrypt.&lt;/p&gt;

&lt;p&gt;A vault password is encrypted using the public ssh key of the receiver and
the main data of the vault using AES256, in order to see/decrypt the vault
contentes, the receiver will need to use his private key &amp;amp; password in case of
needed to be available to edit/view the contents.&lt;/p&gt;

&lt;p&gt;You can learn more about generaring an SSH key here:
&lt;a href=&#34;https://help.github.com/articles/generating-an-ssh-key/&#34;&gt;https://help.github.com/articles/generating-an-ssh-key/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;why&#34;&gt;Why ?&lt;/h2&gt;

&lt;p&gt;Because of the need to share sensitive data without the need to share a password.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How it works</title>
      <link>https://ssh-vault.com/post/how-it-works/</link>
      <pubDate>Tue, 20 Sep 2016 04:00:00 +0000</pubDate>
      
      <guid>https://ssh-vault.com/post/how-it-works/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;ssh-vault&lt;/strong&gt; will randomly create a password and use it
for encrypting the contents of the vault using a
&lt;a href=&#34;https://en.wikipedia.org/wiki/Symmetric-key_algorithm&#34;&gt;symmetric cipher&lt;/a&gt;
AES256, the password later will be encrypted using the
&lt;a href=&#34;https://en.wikipedia.org/wiki/RSA_(cryptosystem)&#34;&gt;ssh-rsa&lt;/a&gt; public key of the
receiver.&lt;/p&gt;

&lt;p&gt;This simplify the share of sensitive data across developers, teams, or either to
store things on a public repository by just using ssh keys.&lt;/p&gt;

&lt;p&gt;The option &lt;code&gt;-u &amp;lt;username&amp;gt;&lt;/code&gt; will fetch the receiver ssh-rsa public from github:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; https://github.com/&amp;lt;username&amp;gt;.keys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This helps to create a vault very straight forward, since both the sender and
receiver don&amp;rsquo;t need to exchange their keys before in order to share sensitive
data, therefore this helps to work asynchronously&lt;/p&gt;

&lt;p&gt;The current requirement for using the option &lt;code&gt;-u &amp;lt;username&amp;gt;&lt;/code&gt;
is to have an github.com account with a SSH key, more info here:
&lt;a href=&#34;https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/&#34;&gt;https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An &lt;a href=&#34;https://en.wikipedia.org/wiki/Alice_and_Bob&#34;&gt;Alice and Bob&lt;/a&gt; example could be
the best way to undestand how ssh-vault works.&lt;/p&gt;

&lt;h1 id=&#34;creating-a-vault-encryption&#34;&gt;Creating a vault (encryption)&lt;/h1&gt;

&lt;p&gt;If Alice wants to send something to Bob, Alice will type in a terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -u bob create vault
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alice know that Bob has an account in github.com therefore by using the option
&lt;code&gt;-u bob&lt;/code&gt;, Alice gets Bob&amp;rsquo;s ssh-rsa public key&lt;/p&gt;

&lt;p&gt;In case Alice want&amp;rsquo;s to use a different key, could do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -k /path/to/bob/id_rsa.pub create vault
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;edit-view-a-vault-decryption&#34;&gt;Edit/View a vault (decryption)&lt;/h1&gt;

&lt;p&gt;Bob can use his sha-rsa private key to decrypt the vault by doing:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault view vault
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;He will be prompted for his ssh-key private password if required or if he wants to use
another private key, he do something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -k ~/.ssh/id_rsa_other view vault
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If Bob would like to send something back to Alice, he would do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -u alice create vault
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and so on.&lt;/p&gt;

&lt;h1 id=&#34;shared-vault&#34;&gt;Shared vault&lt;/h1&gt;

&lt;p&gt;In case a team needs to share a vault, the best way could be to share the pair
of ssh keys (public/private) within the team members.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fingerprint</title>
      <link>https://ssh-vault.com/post/fingerprint/</link>
      <pubDate>Tue, 20 Sep 2016 03:59:00 +0000</pubDate>
      
      <guid>https://ssh-vault.com/post/fingerprint/</guid>
      <description>

&lt;h1 id=&#34;ssh-key-fingerprint&#34;&gt;SSH key fingerprint&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;ssh-vault&lt;/strong&gt; can be used to print the ssh key
&lt;a href=&#34;https://en.wikipedia.org/wiki/Public_key_fingerprint&#34;&gt;fingerprint&lt;/a&gt;
compatible with the format that &lt;a href=&#34;https://aws.amazon.com/&#34;&gt;AWS&lt;/a&gt; uses.&lt;/p&gt;

&lt;p&gt;For example to get the fingerprint for user Bob this could be used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -u bob -f
24:c6:6f:33:49:de:d7:bb:77:cf:e9:78:4c:e9:25:5f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or for a key that locally stored:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -k /path/to/key -f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When using the option &lt;code&gt;-u username&lt;/code&gt; if the user has multiple keys and the
fingerprint for key 2 is required, this can be used:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ssh-vault -u bob -k 2 -f
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>